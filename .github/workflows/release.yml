jobs:
  build-maven-jars:
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: zulu
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
        java-version: 21
        server-id: sonatype-nexus-staging
        server-password: CI_DEPLOY_PASSWORD
        server-username: CI_DEPLOY_USERNAME
    - continue-on-error: true
      name: Bump Version Number
      run: 'mvn --no-transfer-progress versions:set versions:commit -DnewVersion="${{
        github.event.inputs.version }}"

        mvn --no-transfer-progress versions:set versions:commit -DnewVersion="${{
        github.event.inputs.version }}" -pl eclipse_plugin

        mvn tycho-versions:update-eclipse-metadata -pl eclipse_plugin

        git ls-files | grep -E ''(pom.xml|MANIFEST.MF)$'' | xargs git add

        git config --global user.email "${{ github.actor }}@users.noreply.github.com"

        git config --global user.name "${{ github.actor }}"

        git commit -m "Release google-java-format ${{ github.event.inputs.version
        }}"

        git tag "v${{ github.event.inputs.version }}"

        echo "TARGET_COMMITISH=$(git rev-parse HEAD)" >> $GITHUB_ENV

        git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN
        }}@github.com/google/google-java-format.git

        '
    - continue-on-error: true
      env:
        CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
        CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      name: Deploy to Sonatype staging
      run: mvn --no-transfer-progress -pl '!eclipse_plugin' -P sonatype-oss-release
        clean deploy -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"
    - continue-on-error: true
      name: Build Eclipse plugin
      run: mvn --no-transfer-progress -pl 'eclipse_plugin' verify gpg:sign -DskipTests=true
        -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"
    - continue-on-error: true
      name: Push tag
      run: 'git push origin "v${{ github.event.inputs.version }}"

        '
    - continue-on-error: true
      name: Add Artifacts to Release Entry
      uses: softprops/action-gh-release@v0.1.14
      with:
        draft: true
        files: 'core/target/google-java-format-*.jar

          eclipse_plugin/target/google-java-format-eclipse-plugin-*.jar

          '
        name: ${{ github.event.input.version }}
        tag_name: v${{ github.event.inputs.version }}
        target_commitish: ${{ env.TARGET_COMMITISH }}
  build-native-image:
    env:
      EXTENSION: ${{ matrix.os == 'windows-latest' && '.exe' || '' }}
      SUFFIX: ${{fromJson('{"ubuntu-20.04":"linux-x86-64", "macos-latest":"darwin-arm64",
        "windows-latest":"windows-x86-64"}')[matrix.os]}}
    name: Build GraalVM native-image on ${{ matrix.os }}
    needs: build-maven-jars
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out repository
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        cache: maven
        distribution: graalvm-community
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: '21'
        native-image-job-reports: 'true'
    - continue-on-error: true
      name: Bump Version Number
      run: mvn --no-transfer-progress versions:set versions:commit -DnewVersion="${{
        github.event.inputs.version }}"
    - continue-on-error: true
      name: Native
      run: mvn -Pnative -DskipTests package -pl core -am
    - continue-on-error: true
      name: Move outputs
      run: cp core/target/google-java-format${{ env.EXTENSION }} google-java-format_${{
        env.SUFFIX }}${{ env.EXTENSION }}
    - continue-on-error: true
      env:
        GH_REPO: ${{ github.repository }}
        GH_TOKEN: ${{ github.token }}
      name: Upload native-image
      run: gh release upload "v${{ github.event.inputs.version }}" "google-java-format_${{
        env.SUFFIX }}${{ env.EXTENSION }}"
    strategy:
      matrix:
        os:
        - ubuntu-20.04
        - macos-latest
        - windows-latest
name: Release google-java-format
on:
  repository_dispatch:
    types: trigger-ga___release.yml
